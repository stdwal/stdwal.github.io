<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stdwal</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://stdwal.github.io/"/>
  <updated>2019-03-28T01:43:48.172Z</updated>
  <id>https://stdwal.github.io/</id>
  
  <author>
    <name>stdwal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java反射机制</title>
    <link href="https://stdwal.github.io/2019/03/28/reflect/"/>
    <id>https://stdwal.github.io/2019/03/28/reflect/</id>
    <published>2019-03-28T01:43:48.172Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSpeed;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Car</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBrand</span><span class="params">(String brand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(String color)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.color = color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxSpeed</span><span class="params">(<span class="keyword">int</span> maxSpeed)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxSpeed = maxSpeed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Car&#123;"</span> +</span><br><span class="line">                <span class="string">"brand='"</span> + brand + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", color='"</span> + color + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", maxSpeed="</span> + maxSpeed +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">initByDefaultConst</span><span class="params">()</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过类装载器获得Car类对象</span></span><br><span class="line">        ClassLoader loader = Thread.currentThread().getContextClassLoader();</span><br><span class="line">        Class clazz = loader.loadClass(<span class="string">"Car"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取类的构造方法并通过它实例化Car</span></span><br><span class="line">        Constructor cons = clazz.getDeclaredConstructor((Class[])<span class="keyword">null</span>);</span><br><span class="line">        Car car = (Car)cons.newInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过反射方法设置属性</span></span><br><span class="line">        Method setBrand = clazz.getMethod(<span class="string">"setBrand"</span>, String.class);</span><br><span class="line">        setBrand.invoke(car, <span class="string">"benz"</span>);</span><br><span class="line">        Method setColor = clazz.getMethod(<span class="string">"setColor"</span>, String.class);</span><br><span class="line">        setColor.invoke(car, <span class="string">"黑色"</span>);</span><br><span class="line">        Method setMaxSpeed = clazz.getMethod(<span class="string">"setMaxSpeed"</span>, <span class="keyword">int</span>.class);</span><br><span class="line">        setMaxSpeed.invoke(car, <span class="number">200</span>);</span><br><span class="line">        <span class="keyword">return</span> car;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Car car = initByDefaultConst();</span><br><span class="line">        System.out.println(car);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-类加载器ClassLoader"><a href="#1-类加载器ClassLoader" class="headerlink" title="1.类加载器ClassLoader"></a>1.类加载器ClassLoader</h2><p>类加载器就是寻找类的字节码文件并构造出类在JVM内部表示对象的组件。</p><p>类加载器把一个类装入JVM中，需要经过以下步骤：<br>（1）装载：查找和导入Class文件<br>（2）链接：执行校验、准备和解析（可选）步骤<br>    1.校验：检查载入Class文件数据的正确性<br>    2.准备：给类的静态变量分配存储空间<br>    3.解析：将符号引用转换成直接引用<br>（3）初始化：对类的静态变量、静态代码块执行初始化工作</p><p>类装载工作由ClassLoader及其子类负责。JVM在运行时会产生3个ClassLoader：根装载器、ExtClassLoader（拓展类装载器）和AppClassLoader（应用类装载器）。</p><p>根装载器不是ClassLoader的子类，它使用C++编写，因而在Java中看不到它，它负责装载JRE的核心类库<br>ExtClassLoader和AppClassLoader都是ClassLoader的子类，ExtClassLoader负责装载JRE拓展目录ext中的jar包，AppClassLoader负责装载classpath路径下的类包。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoaderTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassLoader loader = Thread.currentThread().getContextClassLoader();</span><br><span class="line">        System.out.println(<span class="string">"current loader = "</span> + loader);</span><br><span class="line">        System.out.println(<span class="string">"parent loader = "</span> + loader.getParent());</span><br><span class="line">        System.out.println(<span class="string">"grandparent loader = "</span> + loader.getParent().getParent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">current loader = sun.misc.Launcher$AppClassLoader@18b4aac2</span><br><span class="line">parent loader = sun.misc.Launcher$ExtClassLoader@60e53b93</span><br><span class="line">grandparent loader = null</span><br></pre></td></tr></table></figure><p>每个类在JVM中都拥有一个对应的java.lang.Class对象，它提供了类结构信息的描述。数组、枚举、注解及基本Java类型，甚至void都拥有对应的Class对象。Class没有public的构造方法。Class对象是在装载类时由JVM通过调用类装载器中的defineClass()方法自动构造的。</p><p>Class反射对象描述类语义结构，可以从Class对象中获取构造函数、成员变量、方法类等元素的反射对象，并通过反射对象对目标类对象进行操作：</p><ul><li>Constuctor：类的构造函数反射类</li><li>Method：类方法的反射类</li><li>Field：类的成员变量的反射类</li></ul><p>参考：《精通Spring 4.x  企业应用开发实战》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java内存区域</title>
    <link href="https://stdwal.github.io/2019/03/28/jvm-memory/"/>
    <id>https://stdwal.github.io/2019/03/28/jvm-memory/</id>
    <published>2019-03-27T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>Java虚拟机在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁的时间，有的区域随着虚拟机进程的启动而存在，有些区域则是依赖用户线程的启动和结束而建立和销毁。Java虚拟机所管理的内存将会包括以下几个运行时数据区：</p><h2 id="1-程序计数器"><a href="#1-程序计数器" class="headerlink" title="1.程序计数器"></a>1.程序计数器</h2><p>程序计数器（Program Counter Register）是一块较小的内存空间，它的作用可以看作是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都依赖这个计数器来完成。</p><p>由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器是一个内核）只会执行一条线程中的指令。因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个独立的程序计数器，各条线程之间的计数器互不影响，独立存储，我们称这类内存区域为“线程私有”的内存。</p><p>如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址，如果正在执行的是Native方法，这个计数器值则为空（Undefine）。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。</p><h2 id="2-Java虚拟机栈"><a href="#2-Java虚拟机栈" class="headerlink" title="2.Java虚拟机栈"></a>2.Java虚拟机栈</h2><p>与程序计数器一样，Java虚拟机栈（Java Virtual Machine Stacks）也是线程私有的，它的生命周期与线程相同。虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行的时候都会创建一个栈帧（Stack Frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法被调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。</p><p>局部变量表存放了编译期可知的各种基本数据类型、对象引用类型和returnAddress类型（指向了一条字节码指令的地址）。</p><p>其中64位长度的long和double类型的数据会占2个局部变量空间（Slot），其余的数据类型只占1个。局部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的大小。</p><p>Java虚拟机规范对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverFlow异常；如果虚拟机栈可以动态拓展，当拓展时无法申请到足够的内存时会抛出OutOfMemoryError异常。</p><h2 id="3-本地方法栈"><a href="#3-本地方法栈" class="headerlink" title="3.本地方法栈"></a>3.本地方法栈</h2><p>本地方法栈（Native Mehtod Stacks）与虚拟机栈所发挥的作用是非常相似的，其区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则是为虚拟机使用到的Native方法服务。</p><h2 id="4-Java堆"><a href="#4-Java堆" class="headerlink" title="4.Java堆"></a>4.Java堆</h2><p>对大多数应用来说，Java堆（Java Heap）是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。</p><p>Java堆是垃圾收集器的主要区域，因此很多时候也被称做GC堆（Garbage Collected Heap）。从内存回收的角度看，由于现在收集器基本都是采用的分代收集算法，所以Java堆中还可以细分为：新生代和老年代。从内存分配的角度看，线程共享的Java堆中可能划分出多个线程私有的分配缓冲区（Thread Local Allocation Buffer，TLAB）。进一步划分的目的是为了更好地回收内存，或者更快地分配内存。</p><p>Java堆可以处于物理上不连续的内存空间中，只要逻辑上是连续的即可。在实现时，既可以实现成固定大小的，也可以是可拓展的。如果在堆中没有内存完成实例分配，并且堆也无法再拓展时，将会抛出OutOfMemoryError异常。</p><h2 id="5-方法区"><a href="#5-方法区" class="headerlink" title="5.方法区"></a>5.方法区</h2><p>方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</p><p>Java虚拟机规范对这个区域的限制非常宽松，除了和Java堆一样不需要连续的内存和可以选择固定大小或者可拓展外，还可以选择不实现垃圾收集。相对而言，垃圾收集行为在这个区域是比较少出现的，但并非数据进入方法区就永久存在了。这个区域的内存回收目标主要是针对常量池的回收和对类型的卸载。</p><p>当方法区无法满足内存分配需求时，将抛出OutOfMemoryError异常。</p><h2 id="6-运行时常量池"><a href="#6-运行时常量池" class="headerlink" title="6.运行时常量池"></a>6.运行时常量池</h2><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后存放到方法区的运行是常量池中。</p><p>Java虚拟机规范没有对运行时常量池做任何细节的要求，不同的提供商实现的虚拟机可以按照自己的需要来实现这个内存区域。不过，一般来说，除了保存Class文件中描述的符号引用外，还会把翻译出来的直接引用也存储在运行时常量池中。</p><p>运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只能在编译器产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行常量池，运行期间也可能将新的常量放入池中，如String类的intern()方法。</p><p>当常量池无法再申请到内存时会抛出OutOfMemoryError异常。</p><p>参考：《深入理解Java虚拟机》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java虚拟机在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁的时间，有的区域随着虚拟机进程的启动而存在，有些区域则是依赖用户线程的启动和结束而建立和销毁。Java虚拟机所管理的内存将会包括以下几个运行时数据区：
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>druid数据库连接池参考配置</title>
    <link href="https://stdwal.github.io/2019/03/25/druid/"/>
    <id>https://stdwal.github.io/2019/03/25/druid/</id>
    <published>2019-03-24T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot; init-method=&quot;init&quot; destroy-method=&quot;close&quot;&gt;</span><br><span class="line">     &lt;property name=&quot;url&quot; value=&quot;$&#123;jdbc_url&#125;&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;username&quot; value=&quot;$&#123;jdbc_user&#125;&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc_password&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;filters&quot; value=&quot;stat&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;maxActive&quot; value=&quot;20&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;initialSize&quot; value=&quot;1&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;maxWait&quot; value=&quot;60000&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;minIdle&quot; value=&quot;1&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;300000&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;testWhileIdle&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;testOnBorrow&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;testOnReturn&quot; value=&quot;false&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">     &lt;property name=&quot;maxOpenPreparedStatements&quot; value=&quot;20&quot; /&gt;</span><br><span class="line"></span><br><span class="line">     &lt;property name=&quot;asyncInit&quot; value=&quot;true&quot; /&gt;</span><br><span class="line"> &lt;/bean&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring SpringMVC Mybatis配置文件</title>
    <link href="https://stdwal.github.io/2019/03/25/ssm/"/>
    <id>https://stdwal.github.io/2019/03/25/ssm/</id>
    <published>2019-03-24T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>mybatis-config.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;settings&gt;</span><br><span class="line">        &lt;setting name=&quot;useGeneratedKeys&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;setting name=&quot;useColumnLabel&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/settings&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><p>mapper<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;mapper namespace=&quot;...&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=&quot;...&quot; returnType=&quot;...&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;insert id=&quot;...&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/insert&gt;</span><br><span class="line"></span><br><span class="line">    &lt;update id=&quot;...&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/update&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></p><p>spring-dao.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context:property-placeholder location=&quot;classpath:jdbc.properties&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;dataSource&quot; class=&quot;...&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;...&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:mapper/*.xml&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;basePackage&quot; value=&quot;...&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></p><p>spring-service.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context:component-scan base-package=&quot;...&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></p><p>spring-web.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span><br><span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</span><br><span class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mvc:annotation-driven/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mvc:default-servlet-handler/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;viewClass&quot; value=&quot;org.springframework.web.servlet.view.JstlView&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context:component-scan base-package=&quot;...&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></p><p>web.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee</span><br><span class="line">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span><br><span class="line">         version=&quot;4.0&quot;</span><br><span class="line">         metadata-complete=&quot;true&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;dispatcher-servlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</span><br><span class="line"></span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;...&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;dispatcher-servlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mybatis-config.xml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>深入理解RESTful</title>
    <link href="https://stdwal.github.io/2019/03/19/restful/"/>
    <id>https://stdwal.github.io/2019/03/19/restful/</id>
    <published>2019-03-18T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">理解RESTful架构</a></p><p><a href="http://www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html" target="_blank" rel="noopener">RESTful API 最佳实践</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.ruanyifeng.com/blog/2011/09/restful.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;理解RESTful架构&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MAC OS下的MYSQL安装</title>
    <link href="https://stdwal.github.io/2019/03/13/mysql-on-mac/"/>
    <id>https://stdwal.github.io/2019/03/13/mysql-on-mac/</id>
    <published>2019-03-12T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>使用HomeBrew安装Mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install mysql</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql.server start</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_secure_installation</span><br><span class="line"> </span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"> </span><br><span class="line">Connecting to MySQL using a blank password.</span><br><span class="line"> </span><br><span class="line">VALIDATE PASSWORD PLUGIN can be used to test passwords</span><br><span class="line">and improve security. It checks the strength of password</span><br><span class="line">and allows the users to set only those passwords which are</span><br><span class="line">secure enough. Would you like to setup VALIDATE PASSWORD plugin?</span><br><span class="line">// 提示是否设置密码</span><br><span class="line">Press y|Y for Yes, any other key for No: y</span><br><span class="line">// 提示选择密码强度等级</span><br><span class="line">There are three levels of password validation policy:</span><br><span class="line"> </span><br><span class="line">LOW    Length &gt;= 8</span><br><span class="line">MEDIUM Length &gt;= 8, numeric, mixed case, and special characters</span><br><span class="line">STRONG Length &gt;= 8, numeric, mixed case, special characters and dictionary                  file</span><br><span class="line"> </span><br><span class="line">Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 1</span><br><span class="line">Please set the password for root here.</span><br><span class="line">// 按照所选的密码强度要求设定密码</span><br><span class="line">New password: </span><br><span class="line"> </span><br><span class="line">Re-enter new password: </span><br><span class="line"> </span><br><span class="line">// 提示密码强度50,不符合要求重新设置密码</span><br><span class="line">Estimated strength of the password: 50 </span><br><span class="line">Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : y</span><br><span class="line"> ... Failed! Error: Your password does not satisfy the current policy requirements</span><br><span class="line"> </span><br><span class="line">New password: </span><br><span class="line"> </span><br><span class="line">Re-enter new password: </span><br><span class="line">// 提示密码强度100,符合要求继续进行</span><br><span class="line">Estimated strength of the password: 100 </span><br><span class="line">Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : y</span><br><span class="line">By default, a MySQL installation has an anonymous user,</span><br><span class="line">allowing anyone to log into MySQL without having to have</span><br><span class="line">a user account created for them. This is intended only for</span><br><span class="line">testing, and to make the installation go a bit smoother.</span><br><span class="line">You should remove them before moving into a production</span><br><span class="line">environment.</span><br><span class="line">// 提示删除默认无密码用户</span><br><span class="line">Remove anonymous users? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line">Success.</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Normally, root should only be allowed to connect from</span><br><span class="line">&apos;localhost&apos;. This ensures that someone cannot guess at</span><br><span class="line">the root password from the network.</span><br><span class="line">// 提示禁止远程root登录</span><br><span class="line">Disallow root login remotely? (Press y|Y for Yes, any other key for No) : no</span><br><span class="line"> </span><br><span class="line"> ... skipping.</span><br><span class="line">By default, MySQL comes with a database named &apos;test&apos; that</span><br><span class="line">anyone can access. This is also intended only for testing,</span><br><span class="line">and should be removed before moving into a production</span><br><span class="line">environment.</span><br><span class="line"> </span><br><span class="line">// 提示删除默认自带的test数据库</span><br><span class="line">Remove test database and access to it? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line"> - Dropping test database...</span><br><span class="line">Success.</span><br><span class="line"> </span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line">Success.</span><br><span class="line"> </span><br><span class="line">Reloading the privilege tables will ensure that all changes</span><br><span class="line">made so far will take effect immediately.</span><br><span class="line">// 提示是否重新加载privilege tables</span><br><span class="line">Reload privilege tables now? (Press y|Y for Yes, any other key for No) : y</span><br><span class="line">Success.</span><br><span class="line"> </span><br><span class="line">All done!</span><br></pre></td></tr></table></figure><p>如果出现 <em>Error: Table ‘mysql.role_edges’ doesn’t exist</em> ，使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_upgrade -u root</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用HomeBrew安装Mysql&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于分治法求最大子序列和问题</title>
    <link href="https://stdwal.github.io/2019/03/10/max-subsequence-sum/"/>
    <id>https://stdwal.github.io/2019/03/10/max-subsequence-sum/</id>
    <published>2019-03-09T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>求解最大子序列和问题有大致四个算法，效率分别为O(n^3)、O(n^2)、O(logn)和O(n)。</p><p>显然O(n)是最完美的线性联机算法，但这里主要讨论使用分治法递归求解。</p><a id="more"></a><p>分治策略是将问题分成两个大致相等的子问题，然后递归地对它们求解。因此我们可将整个序列分成两部分求解。</p><p>例如序列： 4 -3 5 -2 -1 2 6 -2</p><table><thead><tr><th>前半部分</th><th>后半部分</th></tr></thead><tbody><tr><td>4 -3 5 -2</td><td>-1 2 6 -2</td></tr></tbody></table><p>最大子序列的和可能在三处位置出现：或者整个出现在输入数据的左半边，或者整个数据的右半边，或者跨越输入数据的中部从而占据左右两半部分。</p><p>因此三者中的最大值即为最大子序列和。在本例中，前半部分的最大子序列和为6，后半部分的子序列和为8，而跨越两个部分的最大子序列和为11，因此该例的答案为11.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxSubSum</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> MaxLeftSum, MaxRightSum;</span><br><span class="line">    <span class="keyword">int</span> MaxLeftBorderSum, MaxRightBorderSum;</span><br><span class="line">    <span class="keyword">int</span> LeftBorderSum, RightBoarderSum;</span><br><span class="line">    <span class="keyword">int</span> Center, i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A[left] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> A[left];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Center = (left + right) / <span class="number">2</span>;</span><br><span class="line">    MaxLeftSum = MaxSubSum(A, left, Center);</span><br><span class="line">    MaxRightSum = MaxSubSum(A, Center + <span class="number">1</span>, right);</span><br><span class="line"></span><br><span class="line">    MaxLeftBorderSum = LeftBorderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = Center; i &gt;= left; i--) &#123;</span><br><span class="line">        LeftBorderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span> (LeftBorderSum &gt; MaxLeftBorderSum) &#123;</span><br><span class="line">            MaxLeftBorderSum = LeftBorderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    MaxRightBorderSum = RightBoarderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = Center + <span class="number">1</span>; i &lt;= right; i++) &#123;</span><br><span class="line">        RightBoarderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span> (RightBoarderSum &gt; MaxRightBorderSum) &#123;</span><br><span class="line">            MaxRightBorderSum = RightBoarderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Max3(MaxLeftSum, MaxRightSum,</span><br><span class="line">         MaxLeftBorderSum + MaxRightBorderSum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码第7-13行处理基准情况，即当序列中只有一个元素时，如果该元素大于0，则该元素的值就是最大子序列之和，否则答案为0。</p><p>代码第18-31行分别处理左右两部分的最大子序列和问题。</p><p>最后将三者的最大值返回即可。</p><hr><p>参考文献：《数据结构与算法分析（C语言描述）》</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;求解最大子序列和问题有大致四个算法，效率分别为O(n^3)、O(n^2)、O(logn)和O(n)。&lt;/p&gt;
&lt;p&gt;显然O(n)是最完美的线性联机算法，但这里主要讨论使用分治法递归求解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="algorithms" scheme="https://stdwal.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>堆排序</title>
    <link href="https://stdwal.github.io/2019/02/26/heapsort/"/>
    <id>https://stdwal.github.io/2019/02/26/heapsort/</id>
    <published>2019-02-25T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。</p><p>堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p><a id="more"></a><p>我们可以使用一个附加数组建立二叉堆，执行数次的DeleteMin操作，将元素记录到第二个数组然后将数组拷贝回来，得到N个元素的排序。</p><p>建立N个元素的二叉堆花费O(N)时间，每执行以此DeleteMin花费O(logN)时间，因此总的运行时间为O(NlogN)</p><p>避免使用第二个数组的聪明的做法是利用这样的事实：在每次DeleteMin之后，堆缩小了1。因此，位于堆中最后的单元可以用来存放刚刚删去的元素。</p><p>使用这种策略，在最后一个DeleteMin后，该数组将以递减的顺序包含这些元素。如果我们想要这些元素排成更典型的递增顺序，我们可以改变序的特性使得父亲的关键字的值大于儿子的关键字的值，即max堆。</p><p><em>数组从0开始计数</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LeftChild(i) (2 * (i) + 1)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PerDown</span><span class="params">(ElementType A[i], <span class="keyword">int</span> i, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> Child;</span><br><span class="line">        ElementType Tmp;</span><br><span class="line">        <span class="keyword">for</span> (Tmp = A[i]; LeftChild(i) &lt; N; i = Child) &#123;</span><br><span class="line">                Child = LeftChild(i);</span><br><span class="line">                <span class="keyword">if</span> (Child != N - <span class="number">1</span> &amp;&amp; A[Child<span class="number">-1</span>] &gt; A[Child])</span><br><span class="line">                        Child++;</span><br><span class="line">                <span class="keyword">if</span> (Tmp &lt; A[Child])</span><br><span class="line">                        A[i] = A[Child];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        A[i] = Tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Heapsort</span><span class="params">(ElementType A[], <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = N / <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                PerDown(A, i, N);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = N - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">                Swap(&amp;A[<span class="number">0</span>], &amp;A[i]);</span><br><span class="line">                PerDown(A, <span class="number">0</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PerDown函数用于判断当前元素在堆中是否满足堆序性质，即判断当前元素是否大于它的儿子。</p><p>在Heapsort函数中第一个for循环用于建立一个堆（自二叉堆的倒数第二层开始自底向上判断堆序性质），然后将堆顶的元素与最后的元素互换（DeleteMax）并重建堆，以此得到一个有序数组。</p><hr><p>参考：<br>数据结构与算法分析（C语言描述）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。&lt;/p&gt;
&lt;p&gt;堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="algorithms" scheme="https://stdwal.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>由字符串拼接看排序的应用</title>
    <link href="https://stdwal.github.io/2019/01/24/sort-use/"/>
    <id>https://stdwal.github.io/2019/01/24/sort-use/</id>
    <published>2019-01-23T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>Given a collection of number segments, you are supposed to recover the smallest number from them. For example, given {32, 321, 3214, 0229, 87}, we can recover many numbers such like 32-321-3214-0229-87 or 0229-32-87-321-3214 with respect to different orders of combinations of these segments, and the smallest number is 0229-321-3214-32-87.</p><a id="more"></a><p>显然为使得拼接后的数字最小，可以考虑将每个数字以字符串的方式读入，按字典序排序。</p><p>但这同时这会带来一个问题：具有相同前缀的字符串该如何确定先后次序以期达到总体最小。</p><p>为了解决这个问题，我们需要换一种思路：现在有两个数字{32, 321}，有两种拼接方式，即32-321和321-32，显然321-32为题目所要求的最小字符串。</p><p>因此我们只需更换排序方式即可解决具有相同前缀的字符串排序问题，判断（a + b）和（b + a）的字典序即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="built_in">string</span> a, <span class="built_in">string</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b &lt; b + a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given a collection of number segments, you are supposed to recover the smallest number from them. For example, given {32, 321, 3214, 0229, 87}, we can recover many numbers such like 32-321-3214-0229-87 or 0229-32-87-321-3214 with respect to different orders of combinations of these segments, and the smallest number is 0229-321-3214-32-87.&lt;/p&gt;
    
    </summary>
    
    
      <category term="algorithms" scheme="https://stdwal.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Vmware Fusion下Ubuntu学习</title>
    <link href="https://stdwal.github.io/2018/05/19/vmware-ubuntu/"/>
    <id>https://stdwal.github.io/2018/05/19/vmware-ubuntu/</id>
    <published>2018-05-18T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cn.ubuntu.com" target="_blank" rel="noopener">下载Ubuntu发行版</a></p><a id="more"></a><h4 id="安装vmware-tools"><a href="#安装vmware-tools" class="headerlink" title="安装vmware tools"></a>安装vmware tools</h4><p>在虚拟机设置中点击安装vmware tools，获取一个VMwareTools-x.x.x-xxxx.tar.gz文件并解压。</p><p>打开终端并输入以下命令以安装vmware tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./vmware-install.pl -d</span><br></pre></td></tr></table></figure><p>其中-d表示接受默认设置</p><h4 id="使用mac终端ssh连接到Ubuntu"><a href="#使用mac终端ssh连接到Ubuntu" class="headerlink" title="使用mac终端ssh连接到Ubuntu"></a>使用mac终端ssh连接到Ubuntu</h4><p>安装openssh-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>使用 <strong>ifconfig</strong> 命令查看Ubuntu的IP地址</p><p>如果提示 <em>Command ‘ifconfig’ not found</em> ,安装net-tools后再使用 <strong>ifconfig</strong> 获取IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install net-tools</span><br></pre></td></tr></table></figure><p><img src="/images/ifconfig.png" alt="ifconfig"></p><p>打开mac终端，连接到对应的主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [username]@[ip]</span><br></pre></td></tr></table></figure><p>如果有类似如下的提示</p><blockquote><p>The authenticity of host ‘172.16.204.132 (172.16.204.132)’ can’t be established.<br>ECDSA key fingerprint is SHA256:FdGYxwkyB8V7+0DFAKvwX/A1NkomzxV/cJ/Ynp/iACo.<br>Are you sure you want to continue connecting (yes/no)? yes</p></blockquote><p>输入yes建立连接</p><p><img src="/images/ssh.png" alt="ssh"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://cn.ubuntu.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载Ubuntu发行版&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sublime Text3</title>
    <link href="https://stdwal.github.io/2018/04/27/sublime-text/"/>
    <id>https://stdwal.github.io/2018/04/27/sublime-text/</id>
    <published>2018-04-26T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h4 id="在终端中使用Sublime-Text"><a href="#在终端中使用Sublime-Text" class="headerlink" title="在终端中使用Sublime Text:"></a>在终端中使用Sublime Text:</h4><p>在终端中输入以下命令为subl创建链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl</span><br></pre></td></tr></table></figure><h4 id="编写markdown"><a href="#编写markdown" class="headerlink" title="编写markdown"></a>编写markdown</h4><p>按下 <strong>ctrl+shift+p</strong> 打开命令面板，输入 <strong>install</strong> 并选择 <strong>Package Control: install package</strong></p><p>在跳出的面板中输入 <strong>markdown</strong> 选择安装 <strong>MarkdownEditing</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;在终端中使用Sublime-Text&quot;&gt;&lt;a href=&quot;#在终端中使用Sublime-Text&quot; class=&quot;headerlink&quot; title=&quot;在终端中使用Sublime Text:&quot;&gt;&lt;/a&gt;在终端中使用Sublime
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《数据结构与算法分析——C语言描述》知识点及代码</title>
    <link href="https://stdwal.github.io/2018/04/14/data-structures-and-algorithm-analysis-in-c/"/>
    <id>https://stdwal.github.io/2018/04/14/data-structures-and-algorithm-analysis-in-c/</id>
    <published>2018-04-13T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>书中所有码源参见<a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c" target="_blank" rel="noopener">https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c</a></p><a id="more"></a><h4 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h4><ul><li>符号</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/max_sum.c" target="_blank" rel="noopener">最大子序列</a></li><li>对分查找</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/fig2_10.c" target="_blank" rel="noopener">欧几里得算法</a></li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/fig2_11.c" target="_blank" rel="noopener">幂运算</a></li><li>对数运行时间</li></ul><h4 id="表、栈和队列"><a href="#表、栈和队列" class="headerlink" title="表、栈和队列"></a>表、栈和队列</h4><ul><li>ADT</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/list.c" target="_blank" rel="noopener">链表</a></li><li>双链表</li><li>循环链表</li><li>静态链表</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/poly.c" target="_blank" rel="noopener">多项式ADT</a></li><li>基数排序</li><li>栈（<a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/stackli.c" target="_blank" rel="noopener">链表实现</a>、<a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/stackar.c" target="_blank" rel="noopener">数组实现</a>）</li><li>平衡符号</li><li>后缀表达式</li><li>中缀转后缀</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/queue.c" target="_blank" rel="noopener">队列</a></li></ul><h4 id="树"><a href="#树" class="headerlink" title="树"></a>树</h4><ul><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/tree.c" target="_blank" rel="noopener">二叉查找树</a></li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/avltree.c" target="_blank" rel="noopener">AVL树</a></li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/splay.c" target="_blank" rel="noopener">伸展树</a></li><li>树的遍历（先序、中序、后序、层序）</li><li>B-树</li></ul><h4 id="散列"><a href="#散列" class="headerlink" title="散列"></a>散列</h4><ul><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/hashfunc.c" target="_blank" rel="noopener">散列函数</a></li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/hashsep.c" target="_blank" rel="noopener">分离链接法</a></li><li>开放定址法（线性探测、<a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/hashquad.c" target="_blank" rel="noopener">平方探测</a>、双散列）</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/hashquad.c" target="_blank" rel="noopener">再散列</a></li><li>可扩散列</li></ul><h4 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h4><ul><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/binheap.c" target="_blank" rel="noopener">二叉堆</a></li><li>d-堆</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/leftheap.c" target="_blank" rel="noopener">左式堆</a></li><li>斜堆</li><li><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/binomial.c" target="_blank" rel="noopener">二项队列</a></li></ul><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/sort.c" target="_blank" rel="noopener">排序</a></h4><ul><li>插入排序</li><li>希尔排序</li><li>堆排序</li><li>归并排序</li><li>快速排序</li><li>桶式排序</li><li>外部排序</li></ul><h4 id="不相交集ADT"><a href="#不相交集ADT" class="headerlink" title="不相交集ADT"></a><a href="https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c/blob/master/code/disjsets.c" target="_blank" rel="noopener">不相交集ADT</a></h4><ul><li>路径压缩</li><li>按秩求并</li><li>Union/Find算法分析</li></ul><h4 id="图论算法"><a href="#图论算法" class="headerlink" title="图论算法"></a>图论算法</h4><ul><li>图的表示</li><li>拓扑排序</li><li>最短路</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;书中所有码源参见&lt;a href=&quot;https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/stdwal/data-structures-and-algorithm-analysis-in-c&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="data structures" scheme="https://stdwal.github.io/tags/data-structures/"/>
    
      <category term="algorithms" scheme="https://stdwal.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>寻找两个有序数列的中间值问题</title>
    <link href="https://stdwal.github.io/2018/04/04/two-arrays-median/"/>
    <id>https://stdwal.github.io/2018/04/04/two-arrays-median/</id>
    <published>2018-04-03T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>以升序给定两个数列，求两个数列中的中间值问题。</p><a id="more"></a><p>例如：</p><p>11 12 13 14<br>9 10 15 16 17</p><p>这两个序列，它们的中间值为13.</p><p>最常见的做法是将这两个序列放入同一个数组中排序，然后输出第(a+b)/2个元素.</p><p>但即使是O(nlogn)的快排在大规模数据里也难以在一秒内返回答案，我们需要利用数组有序的特点制定一种O(logn)的算法策略。</p><p>我们把这个中值问题扩展到寻找第K小的值问题，等价于在两个数组中挑选出最小的K个元素。由于给定的数组已经按从小到大排序，通过比较两个数组各自的第K/2个元素可以将问题规模减小K/2。</p><p><em>注：假设a[i]为a中第i个元素。</em></p><p>定义函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findkth(int a[], int b[], int k)</span><br></pre></td></tr></table></figure></p><p>表示寻找到并返回数组a，b中第K小的元素。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a[k/<span class="number">2</span>] &lt; b[k/<span class="number">2</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> findkth(a + k / <span class="number">2</span>, b, k - k / <span class="number">2</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[k/<span class="number">2</span>] == b[k/<span class="number">2</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[k/<span class="number">2</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findkth(a, b + k / <span class="number">2</span>, k - k / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种情况是a的第k/2个元素小于b的第k/2个元素，那么将a中的前k/2个元素挑选出来，并在剩下的数组a，b中挑选出后k/2个元素。</p><p>如果数组a，b各自的第k/2个元素相等，则将a中前k/2个元素挑出，b中前k/2个元素也挑出，这样第k小的元素即是a[k/2]（或b[k/2]）。</p><p>再考虑基本情况：</p><ul><li><p>当数组a为空时，b[k]为第k小的元素。</p></li><li><p>当k为1时选择数组a，b中最小的一个，即min(a[0], b[0])。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findkth</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> b[], <span class="keyword">int</span> n1, <span class="keyword">int</span> n2, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n1 &gt; n2) &#123;</span><br><span class="line">        <span class="keyword">return</span> findkth(b, a, n2, n1, k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n1 == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> b[k<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> min(a[<span class="number">0</span>], b[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ath = min(k / <span class="number">2</span>, n1);</span><br><span class="line">    <span class="keyword">int</span> bth = k - ath;</span><br><span class="line">    <span class="keyword">if</span> (a[ath<span class="number">-1</span>] &lt; b[bth<span class="number">-1</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> findkth(a + ath, b, n1 - ath, n2, k - ath);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[ath<span class="number">-1</span>] == b[bth<span class="number">-1</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[ath<span class="number">-1</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findkth(a, b + bth, n1, n2 - bth, k - bth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以升序给定两个数列，求两个数列中的中间值问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="algorithms" scheme="https://stdwal.github.io/tags/algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://stdwal.github.io/2018/01/01/hello-world/"/>
    <id>https://stdwal.github.io/2018/01/01/hello-world/</id>
    <published>2017-12-31T16:00:00.000Z</published>
    <updated>2019-03-28T01:43:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h4 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h4 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h4 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h4 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
